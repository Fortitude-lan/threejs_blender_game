import { pull, splitFileName } from "@lincode/utils"
import store from "@lincode/reactivity"

export const $eWRhpRV$loadingCount = store(0)

export const print = (...args: Array<any>) => {
    console.log(...args)
}

export const random = (x: number, y: number) => Math.floor(Math.random() * ((y - x) + 1) + x)

export const abs = Math.abs

export const atan2 = (y: number, x: number) => Math.atan2(y, x) * 180 / Math.PI

export const $eWRhpRV$range = (start: number, end: number) => {
    const result = []
    
    if (start < end)
        for (let i = start; i <= end; ++i)
            result.push(i)
    else
        for (let i = start; i >= end; --i)
            result.push(i)

    return result
}

const preloadCache = new Set<string>()
const [setLoadingCount, getLoadingCount] = $eWRhpRV$loadingCount

export const $eWRhpRV$preloaders = new Map<string, (url: string) => Promise<any>>()

export const $eWRhpRV$preload = (url: string) => {
    if (preloadCache.has(url)) return url
    preloadCache.add(url)

    const extension = splitFileName(url)[1]?.toLowerCase()

    if (extension && $eWRhpRV$preloaders.has(extension)) {
        setLoadingCount(getLoadingCount() + 1)
        $eWRhpRV$preloaders.get(extension)!(url).finally(() => setLoadingCount(getLoadingCount() - 1))
    }
    return url
}

//@ts-ignore
Array.prototype.delete = function (item) {
    pull(this, item)
}

//@ts-ignore
Array.prototype.append = Array.prototype.push