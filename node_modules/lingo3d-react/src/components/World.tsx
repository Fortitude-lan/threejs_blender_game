import React, { useLayoutEffect, useRef } from "react"
import { container, outline, settings } from "lingo3d"
import index from "lingo3d"
import { preventTreeShake } from "@lincode/utils"

preventTreeShake(index)
outline.style.display = "none"

const World: React.FC<React.HTMLProps<HTMLDivElement>> = ({ style, children, ...rest }) => {
    const divRef = useRef<HTMLDivElement>(null)

    useLayoutEffect(() => {
        const el = divRef.current
        if (!el) return

        el.appendChild(container)

        const cb = () => {
            settings.containerWidth = settings.width = el.clientWidth
            settings.containerHeight = settings.height = el.clientHeight
        }
        cb()
        window.addEventListener("resize", cb)

        return () => {
            window.removeEventListener("resize", cb)
        }
    }, [])

    return (
        <div ref={divRef} {...rest} style={{ width: "100%", height: "100%", position: "absolute", top: 0, left: 0, ...style }}>
            {children}
        </div>
    )
}

export default World