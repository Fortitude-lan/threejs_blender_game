import { useCurrentRef } from "@lincode/hooks";
import { Keyboard } from "lingo3d";
import { useLayoutEffect, useRef, useState } from "react";
export default (cb) => {
    const statusRef = useRef();
    const [, render] = useState({});
    const cbCurrentRef = useCurrentRef(cb);
    useLayoutEffect(() => {
        const keyboard = new Keyboard();
        keyboard.onKeyDown = k => {
            if (statusRef.current === k)
                return;
            statusRef.current = k;
            render({});
        };
        keyboard.onKeyUp = () => {
            statusRef.current = undefined;
            render({});
        };
        keyboard.onKeyPress = k => { var _a; return (_a = cbCurrentRef.current) === null || _a === void 0 ? void 0 : _a.call(cbCurrentRef, k); };
        return () => {
            keyboard.dispose();
        };
    }, []);
    return statusRef.current;
};
