import { useMemoOnce } from "@lincode/hooks";
import { nanoid } from "nanoid";
import { useState } from "react";
export default (o) => {
    const bullets = useMemoOnce(() => new Set());
    const [, render] = useState({});
    const factory = (cb) => [...bullets].map(id => cb(id));
    const spawn = (_o) => {
        var _a;
        const options = { ...o, ..._o };
        (_a = options.id) !== null && _a !== void 0 ? _a : (options.id = nanoid());
        bullets.add(options);
        render({});
        options.lifetime && setTimeout(() => {
            bullets.delete(options);
            render({});
        }, options.lifetime);
    };
    return [factory, spawn];
};
