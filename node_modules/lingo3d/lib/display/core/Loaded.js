import { Resolvable } from "@lincode/promiselikes";
import { Group, Mesh } from "three";
import { boxGeometry } from "../primitives/Cube";
import { wireframeMaterial } from "../utils/reusables";
import ObjectManager from "./ObjectManager";
export default class Loaded extends ObjectManager {
    constructor() {
        super(new Mesh(boxGeometry, wireframeMaterial));
        this.loadedGroup = new Group();
        this.loadedResolvable = new Resolvable();
        this.outerObject3d.add(this.loadedGroup);
    }
    get src() {
        return this._src;
    }
    set src(src) {
        if (this._src === src)
            return;
        this._src = src;
        src && this.load(src).then(loaded => {
            if (this.done || this._src !== src)
                return;
            this.object3d.visible = false;
            this.resolveLoaded(loaded);
        });
    }
    get onLoad() {
        return this._onLoad;
    }
    set onLoad(cb) {
        var _a;
        this._onLoad = cb;
        (_a = this.loadedHandle) === null || _a === void 0 ? void 0 : _a.cancel();
        cb && (this.loadedHandle = this.loadedResolvable.then(cb));
    }
    get width() {
        return super.width;
    }
    set width(val) {
        super.width = val;
        this.widthSet = true;
    }
    get height() {
        return super.height;
    }
    set height(val) {
        super.height = val;
        this.heightSet = true;
    }
    get depth() {
        return super.depth;
    }
    set depth(val) {
        super.depth = val;
        this.depthSet = true;
    }
    get innerRotationX() {
        return super.innerRotationX;
    }
    set innerRotationX(val) {
        super.innerRotationX = val;
        this.loadedGroup.rotation.x = this.object3d.rotation.x;
    }
    get innerRotationY() {
        return super.innerRotationY;
    }
    set innerRotationY(val) {
        super.innerRotationY = val;
        this.loadedGroup.rotation.y = this.object3d.rotation.y;
    }
    get innerRotationZ() {
        return super.innerRotationZ;
    }
    set innerRotationZ(val) {
        super.innerRotationZ = val;
        this.loadedGroup.rotation.z = this.object3d.rotation.z;
    }
    get innerX() {
        return super.innerX;
    }
    set innerX(val) {
        super.innerX = val;
        this.loadedGroup.position.x = this.object3d.position.x;
    }
    get innerY() {
        return super.innerY;
    }
    set innerY(val) {
        super.innerY = val;
        this.loadedGroup.position.y = this.object3d.position.y;
    }
    get innerZ() {
        return super.innerZ;
    }
    set innerZ(val) {
        super.innerZ = val;
        this.loadedGroup.position.z = this.object3d.position.z;
    }
}
