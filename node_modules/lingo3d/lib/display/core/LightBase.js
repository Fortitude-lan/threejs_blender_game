import { createEffect } from "@lincode/reactivity";
import { Color } from "three";
import mainCamera from "../../engine/mainCamera";
import scene from "../../engine/scene";
import { getCamera } from "../../states/useCamera";
import { getLightHelper } from "../../states/useLightHelper";
import ObjectManager from "./ObjectManager";
export default class LightBase extends ObjectManager {
    constructor(light, Helper) {
        super(light);
        Helper && this.watch(createEffect(() => {
            if (!getLightHelper() || getCamera() !== mainCamera)
                return;
            const helper = new Helper(this.object3d);
            scene.add(helper);
            return () => {
                helper.dispose();
                scene.remove(helper);
            };
        }, [getCamera, getLightHelper]));
    }
    lookAt(target) {
        super.lookAt(target);
        this.rotationY += 180;
    }
    get color() {
        return "#" + this.object3d.color.getHexString();
    }
    set color(val) {
        this.object3d.color = new Color(val);
    }
    get intensity() {
        return this.object3d.intensity;
    }
    set intensity(val) {
        this.object3d.intensity = val;
    }
}
