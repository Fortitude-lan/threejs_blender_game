import IAreaLight from "../../../interface/IAreaLight";
import ICamera from "../../../interface/ICamera";
import ILight from "../../../interface/ILight";
import IModel from "../../../interface/IModel";
import IObjectManager from "../../../interface/IObjectManager";
import IPointLight from "../../../interface/IPointLight";
import IPrimitive from "../../../interface/IPrimitive";
import IReflector from "../../../interface/IReflector";
import IScene from "../../../interface/IScene";
import ISkyLight from "../../../interface/ISkyLight";
import ISpotLight from "../../../interface/ISpotLight";
import ISprite from "../../../interface/ISprite";
import ISvgMesh from "../../../interface/ISvgMesh";
declare type Omitted = "name" | "animations" | "physics" | "physicsShape" | "maxAngularVelocityX" | "maxAngularVelocityY" | "maxAngularVelocityZ" | "maxVelocityX" | "maxVelocityY" | "maxVelocityZ";
declare const _default: {
    group: Omit<IObjectManager, Omitted>;
    model: Omit<IModel, Omitted>;
    svgMesh: Omit<ISvgMesh, Omitted>;
    sprite: Omit<ISprite, Omitted>;
    reflector: Omit<IReflector, Omitted>;
    scene: Omit<IScene, Omitted>;
    ambientLight: Omit<ILight, Omitted>;
    areaLight: Omit<IAreaLight, Omitted>;
    directionalLight: Omit<ILight, Omitted>;
    skyLight: Omit<ISkyLight, Omitted>;
    pointLight: Omit<IPointLight, Omitted>;
    spotLight: Omit<ISpotLight, Omitted>;
    camera: Omit<ICamera, "mouseControl" | Omitted | "minPolarAngle" | "maxPolarAngle" | "active">;
    circle: Omit<IPrimitive, Omitted>;
    cone: Omit<IPrimitive, Omitted>;
    cube: Omit<IPrimitive, Omitted>;
    cylinder: Omit<IPrimitive, Omitted>;
    octahedron: Omit<IPrimitive, Omitted>;
    plane: Omit<IPrimitive, Omitted>;
    sphere: Omit<IPrimitive, Omitted>;
    tetrahedron: Omit<IPrimitive, Omitted>;
    torus: Omit<IPrimitive, Omitted>;
};
export default _default;
