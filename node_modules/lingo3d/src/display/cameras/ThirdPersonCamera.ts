import { Cancellable } from "@lincode/promiselikes"
import Point3d from "../../api/Point3d"
import ObjectManager from "../core/ObjectManager"
import Camera from "./Camera"
import IThirdPersonCamera from "../../interface/IThirdPersonCamera"

export default class ThirdPersonCamera extends Camera implements IThirdPersonCamera {
    public constructor() {
        super()
        this.rotationY = 180
        this.innerZ = 200
    }

    protected override mouseControlMode: 0 | 1 = 1

    private _loopHandle0: Cancellable | undefined
    private _target: ObjectManager | undefined
    public get target() {
        return this._target
    }
    public set target(target: ObjectManager | undefined) {
        this._loopHandle0?.cancel()
        
        if (!target) return

        let targetPoint = this.rayAt(10000)

        this._loopHandle0 = this.loop(() => {
            targetPoint = this.rayAt(10000)
            targetPoint.y += 2000
            target.lookAt(new Point3d(targetPoint.x, 0, targetPoint.z))
            this.x = target.x
            this.z = target.z
            this.y = target.y
        })
    }

    public override append(object: ObjectManager) {
        this.outerObject3d.parent?.add(object.outerObject3d)
        this.target = object
    }
}